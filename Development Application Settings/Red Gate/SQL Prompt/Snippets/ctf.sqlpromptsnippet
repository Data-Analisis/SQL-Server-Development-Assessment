<?xml version="1.0" encoding="utf-8"?>
<CodeSnippets>
  <CodeSnippet Format="1.0.0">
    <Header>
      <Title>ctf</Title>
      <Shortcut>ctf</Shortcut>
      <Description>ES: Create multi-statement table-valued function</Description>
      <Author />
      <SnippetTypes>
        <SnippetType>Expansion</SnippetType>
      </SnippetTypes>
    </Header>
    <Snippet>
      <Declarations />
      <Code Language="sql"><![CDATA[/**********************************************************************************************************************
** Author:      $USER$
** Created On:  $DATE$
** Modified On: $DATE$
** Description: <FunctionDescription,, Description>
**********************************************************************************************************************/
CREATE FUNCTION <Schema Name, SYSNAME, dbo>.<Function Name, SYSNAME, FunctionName>(
	-- @ParameterName1 AS DataType [ = DefaultValue ]
	-- @ParameterName2 AS DataType [ = DefaultValue ]
) RETURNS <@TableVariableName, SYSNAME, @VariableName> TABLE (
	<ColumnName1, SYSNAME, ColumnName1> <ColumnName1DataType, , INT> NOT NULL,
	<ColumnName2, SYSNAME, ColumnName2> <ColumnName2DataType, , INT> NOT NULL
)
-- WITH ENCRYPTION, RECOMPILE, EXECUTE AS CALLER|SELF|OWNER| 'user_name'
AS
BEGIN
	-- Return the result of the function
	INSERT INTO <@TableVariableName, SYSNAME, @VariableName> (
		<ColumnName1, SYSNAME, ColumnName1>,
		<ColumnName2, SYSNAME, ColumnName2>
	)
	$SELECTIONSTART$SELECT <ColumnName1, SYSNAME, ColumnName1> = 1, <ColumnName2, SYSNAME, ColumnName2> = 2;$SELECTIONEND$
	RETURN;
END
GO]]></Code>
    </Snippet>
  </CodeSnippet>
</CodeSnippets>